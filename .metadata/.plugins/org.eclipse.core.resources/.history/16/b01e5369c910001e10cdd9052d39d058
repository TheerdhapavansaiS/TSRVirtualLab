package com.hex.backend.Controller;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.hex.backend.Entity.Admin;
import com.hex.backend.Service.AdminService;

@CrossOrigin(origins = "http://localhost:4202")
@RestController
@RequestMapping("/api")
public class AdminController {
	
	@Autowired
	private AdminService service;
	
	//Get functions
	@GetMapping("/admin")
    public List<Admin> listAllAdmins() {
        List<Admin> l = service.findAll();
        return l;
    }

	@GetMapping("/admin/{id}")
	public ResponseEntity<Object> retrieveAdminById(@PathVariable("id") String id) {
	     Object admin = service.findByAdminId(id);
	     return ResponseEntity.ok().body(admin);
	}
	
	@GetMapping("/admin/mail/{mail}")
	public ResponseEntity<Object> retrieveAdminBymail(@PathVariable("mail") String mail) {
	     Object admin = service.findByAdminMail(mail);
	     return ResponseEntity.ok().body(admin);
	}
	
	@GetMapping("/admin/name/{name}")
	public List<Admin> retrieveAdminByName(@PathVariable("name") String name) {
	    List<Admin> admin = service.findByAdminName(name);
	     return admin;
	}
	
	@GetMapping("/admin/phone/{phone}")
	public ResponseEntity<Object> retrieveAdminByPhone(@PathVariable("phone") long phone) {
	     Object admin = service.findByAdminPhone(phone);
	     return ResponseEntity.ok().body(admin);
	}
	
	//Put functions
	@PutMapping("/admin/password/{password}/{id}")
    @Transactional
    public ResponseEntity<String> updatePassword(@PathVariable("password") String password, @PathVariable("id") String id) {
        String str = service.updatePassword(password, id);
        return ResponseEntity.ok().body(str);
    }

	@PutMapping("/admin/phone/{phone}/{id}")
    @Transactional
    public ResponseEntity<String> updatePhone(@PathVariable("phone") long phone, @PathVariable("id")String id) {
        String str = service.updatePhone(phone, id);
        return ResponseEntity.ok().body(str);
    }
	
	@PutMapping("/admin/mail/{email}/{id}")
    @Transactional
    public ResponseEntity<String> updateMail(@PathVariable("email") String email, @PathVariable("id")String id) {
        String str = service.updateMail(email, id);
        return ResponseEntity.ok().body(str);
    }
	
	//Post function
	@PostMapping("/admin")
    public ResponseEntity<Admin> saveAdminDetails(@RequestBody Admin admin) {
        Admin a = service.addAdmin(admin);
        return ResponseEntity.ok().body(a);
    }
	
	//Delete function
	@DeleteMapping("/admin/delAdmin/{id}")
    @Transactional
    public ResponseEntity<String> removeAdminById(@PathVariable("id") String id) {
        String str = service.deleteByAdminId(id);
        return ResponseEntity.ok().body(str);
    }
}
